{"version":3,"sources":["view/Components/Nav/generateStyles.js","view/utils/itemsList.js","view/Components/Nav/Navigation.jsx","view/Components/Header/generateStyles.js","view/Components/BurgerMenu/generateStyles.js","view/Components/BurgerMenu/BurgerMenu.jsx","view/Components/Header/Header.jsx","view/hooks/useWindowSize.js","view/utils/breakpoints.js","view/Pages/TodosPage/TodoItem/generateStyles.js","redux/features/todos/types.js","redux/features/todos/reducers.js","redux/features/todos/actions.js","redux/features/todos/operations.js","redux/features/todos/selectors.js","redux/features/todos/index.js","view/Components/Modal/generateStyles.js","view/Components/Modal/ModalWindow.jsx","view/Pages/TodosPage/TodoItem/TodoItem.jsx","view/Pages/TodosPage/Todos/generateStyles.js","view/Pages/TodosPage/Todos/Todos.jsx","view/Pages/CreateNew/generateStyles.js","view/Pages/CreateNew/CreateNew.jsx","App.js","reportWebVitals.js","redux/store/store.js","index.js"],"names":["generateStyles","drawerLogo","color","display","alignItems","padding","list","listItem","cursor","itemContent","textField","paddingRight","listItems","title","icon","path","Navigation","classes","makeStyles","useStyles","Box","Drawer","anchor","variant","className","Typography","gutterBottom","component","fontSize","Divider","burgerMenu","List","itemsList","map","item","ListItem","to","nextId","wrapper","marginTop","justifyContent","position","header","burger","left","borderRadius","top","backgroundColor","width","zIndex","textItem","BurgerMenu","isOpen","toggle","onClick","Header","useState","setOpen","toggleBurger","toggled","size","direction","useWindowSize","window","innerWidth","height","innerHeight","sizes","setSizes","useEffect","changeWindowSizes","addEventListener","removeEventListener","breakpoints","mobile","desktop","card","flexDirection","textAlign","margin","minHeight","maxWidth","completedCard","textDecoration","types","gotTodos","removedTodo","editedTodo","addedTodo","completedTodo","uncompletedTodo","todos","state","action","type","payload","actions","getTodos","data","removeTodo","updatedTodos","completeTodo","updatedList","uncompleteTodo","operations","getData","dispatch","dataFromLS","JSON","parse","localStorage","getItem","fetch","then","res","json","setItem","stringify","removeTodoItem","idToRemove","getState","filter","id","updatedTodoList","completed","addTodo","newTodo","editedTodoItem","newTitle","reducers","modal","transform","background","border","boxShadow","paddingLeft","container","ModalWindow","useDispatch","React","open","updatedTodo","setUpdatedTodo","isButtonDisabled","setButtonDisabled","Tooltip","Modal","onClose","TextField","defaultValue","multiline","onChange","event","target","value","length","Button","button","disabled","todosOperations","TodoItem","isCompleted","listItemCx","cx","style","Card","CardContent","CardActions","onDoubleClick","marginLeft","flexWrap","Todos","useSelector","todosSelectors","todo","CreateNew","setTodo","handleClose","reason","Fragment","IconButton","label","setTimeout","Snackbar","autoHideDuration","message","App","isDesktop","setIsDesktop","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","todosReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2992f2a6.chunk.js","sourcesContent":["export function generateStyles(){\n    return {\n        drawerLogo: {\n            color: \"#006bb3\",\n            display: 'flex',\n            alignItems: 'center',\n            padding: '20px'\n        },\n        list: {\n            padding: '-8px'\n        },\n        listItem: {\n            cursor: 'pointer'\n        },\n        itemContent: {\n            display: 'flex',\n            alignItems: 'center',\n            color: \"#006bb3\"\n        },\n        textField:{\n            paddingRight: '10px'\n        }\n    }\n}","import AddTaskIcon from \"@mui/icons-material/AddTask\";\nimport FormatListNumberedIcon from \"@mui/icons-material/FormatListNumbered\";\nimport React from \"react\";\n\nconst listItems = [\n    {\n        title: 'Create a new Todo',\n        icon: <AddTaskIcon/>,\n        path: '/create-new-todo'\n    },\n    {\n        title: 'Todos',\n        icon: <FormatListNumberedIcon/>,\n        path: '/'\n    },\n]\n\nexport default listItems","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport {Box, Divider, List, ListItem, Toolbar, Typography} from \"@mui/material\";\nimport {makeStyles} from '@mui/styles'\nimport TaskIcon from '@mui/icons-material/Task';\nimport {generateStyles} from \"./generateStyles\";\nimport itemsList from \"../../utils/itemsList\";\nimport {NavLink} from \"react-router-dom\";\nimport nextId from \"react-id-generator\";\n\nfunction Navigation() {\n\n    const useStyles = makeStyles(generateStyles)\n    const classes = useStyles()\n\n    return (\n        <Box>\n            <Drawer\n                anchor=\"left\"\n                variant=\"permanent\">\n                <Box className={classes.drawerLogo}>\n                    <Typography variant=\"h4\" gutterBottom component=\"div\">\n                        G-Soft Todos\n                    </Typography>\n                    <TaskIcon fontSize=\"large\"/>\n                </Box>\n                <Divider />\n                <Box className={classes.burgerMenu}>\n                    <List className={classes.list}>\n                        {itemsList.map(item => {\n                            return (\n                                <ListItem key={nextId()} className={classes.listItem}>\n                                    <Box className={classes.itemContent}>\n                                        <NavLink to={item.path}>\n                                            <Typography variant=\"h5\" gutterBottom component=\"div\" color=\"#006bb3\" className={classes.textField}>\n                                                {item.title}\n                                            </Typography>\n                                        </NavLink>\n                                        {item.icon}\n                                    </Box>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Box>\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default Navigation;","export function generateStyles() {\n    return {\n        wrapper: {\n            marginTop: '15px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'relative'\n\n        },\n        header: {\n            display: \"flex\",\n            color: '#006bb3',\n        },\n        burger: {\n            position: 'absolute',\n            left: 0,\n            color: '#006bb3',\n        }\n    }\n}","export function generateStyles() {\n    return {\n        burgerMenu: {\n            borderRadius: '10px',\n            position: 'absolute',\n            top: '50px',\n            backgroundColor: '#e6f5ff',\n            width: '100%',\n            zIndex: '10'\n        },\n        list: {\n            padding: '-8px'\n        },\n        itemContent: {\n            display: 'flex',\n            alignItems: 'center',\n            color: \"#006bb3\",\n            width: '100%'\n        },\n        textItem: {\n            paddingRight: '10px'\n        }\n    }\n}","import React from 'react';\nimport {Box, List, ListItem, Typography} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\nimport itemsList from \"../../utils/itemsList\";\nimport {NavLink} from \"react-router-dom\";\nimport nextId from \"react-id-generator\";\nimport PropTypes from 'prop-types'\n\nBurgerMenu.propTypes ={\n    isOpen: PropTypes.bool,\n    toggle: PropTypes.func\n}\n\nfunction BurgerMenu({isOpen, toggle}) {\n    const useStyles = makeStyles(generateStyles)\n    const classes = useStyles()\n\n    return (\n        <>\n            {isOpen\n                ?\n                <Box className={classes.burgerMenu}>\n                    <List className={classes.list}>\n                        {itemsList.map(item => {\n                            return (\n                                <ListItem key={nextId()} className={classes.listItem} onClick={toggle}>\n                                    <Box className={classes.itemContent}>\n                                        <NavLink to={item.path}>\n                                            <Typography variant=\"h5\" gutterBottom component=\"div\" color=\"#006bb3\" className={classes.textItem}>\n                                                {item.title}\n                                            </Typography>\n                                        </NavLink>\n                                            {item.icon}\n                                    </Box>\n                                </ListItem>\n                            )\n                        })}\n                    </List>\n                </Box>\n                : null\n            }\n        </>\n    );\n}\n\nexport default BurgerMenu;","import React, {useEffect, useState} from 'react';\nimport {Box, Typography} from \"@mui/material\";\nimport TaskIcon from \"@mui/icons-material/Task\";\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\nimport Hamburger from 'hamburger-react'\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\n\nfunction Header() {\n\n    const useStyles = makeStyles(generateStyles)\n    const classes = useStyles()\n\n    const [isOpen, setOpen] = useState(false)\n    const toggleBurger = () => {\n        setOpen(!isOpen)\n    }\n\n    return (\n        <Box className={classes.wrapper}>\n            <Box className={classes.burger}>\n                <Hamburger\n                    toggled={isOpen}\n                    toggle={toggleBurger}\n                    size={25}\n                    direction=\"right\"\n                />\n            </Box>\n            <Box className={classes.header}>\n                <Typography variant=\"h5\" gutterBottom component=\"div\">\n                    G-Soft Todos\n                </Typography>\n                <TaskIcon fontSize=\"large\"/>\n            </Box>\n            <BurgerMenu isOpen={isOpen} toggle={() => toggleBurger()}/>\n        </Box>\n    );\n}\n\nexport default Header;","import { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n    const [sizes, setSizes] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n\n    useEffect(() => {\n        const changeWindowSizes = () => {\n            setSizes({\n                width: window.innerWidth,\n                height: window.innerHeight\n            });\n        };\n\n        window.addEventListener('resize', changeWindowSizes);\n        return () => {\n            window.removeEventListener('resize', changeWindowSizes);\n        };\n    }, []);\n\n    return sizes;\n};\n\nexport default useWindowSize;\n","const mobile = 375;\nconst desktop = 768;\n\nconst breakpoints = {\n    mobile,\n    desktop\n}\n\nexport default breakpoints","export function generateStyles(){\n    return{\n        card: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            textAlign: 'center',\n            margin: \"5px 5px\",\n            width: '80%',\n            minHeight: '100px',\n            ['@media(min-width: 768px)']: {\n                maxWidth: '275px'\n            }\n        },\n        completedCard: {\n            textDecoration: 'line-through',\n\n\n        },\n        icon:{\n            cursor: \"pointer\"\n        }\n    }\n}","const gotTodos = 'todos/gotTodos';\nconst removedTodo = 'todos/removedTodo';\nconst editedTodo = 'todos/editedTodo';\nconst addedTodo = 'todos/addedTodo';\nconst completedTodo = 'todos/completedTodo';\nconst uncompletedTodo = 'todos/uncompletedTodo';\n\nconst types = {\n    gotTodos,\n    removedTodo,\n    editedTodo,\n    addedTodo,\n    completedTodo,\n    uncompletedTodo\n}\n\nexport default types;\n","import types from \"./types\";\n\nconst todosReducers = (state = [], action) => {\n    const {type,payload} = action;\n    const {gotTodos,removedTodo,completedTodo,uncompletedTodo,addedTodo, editedTodo} = types;\n\n    switch (type) {\n        case gotTodos:\n            return payload\n        case removedTodo:\n            return payload\n        case completedTodo:\n            return payload\n        case uncompletedTodo:\n            return payload\n        case addedTodo:\n            return payload\n        case editedTodo:\n            return payload\n        default: return state\n    }\n}\n\nexport default {\n    todos: todosReducers\n}","import types from \"./types\";\n\nconst getTodos = (data) => ({\n    type: types.gotTodos,\n    payload: data\n})\n\nconst removeTodo = (updatedTodos) => ({\n    type: types.removedTodo,\n    payload: updatedTodos\n})\n\nconst completeTodo = (updatedList) => ({\n    type: types.completedTodo,\n    payload: updatedList\n})\n\nconst uncompleteTodo = (updatedList) => ({\n    type: types.uncompletedTodo,\n    payload: updatedList\n})\n\nconst addedTodo = (updatedList) => ({\n    type: types.addedTodo,\n    payload: updatedList\n})\n\nconst editedTodo = (updatedList) => ({\n    type: types.editedTodo,\n    payload: updatedList\n})\n\nconst actions = {\n    getTodos,\n    removeTodo,\n    completeTodo,\n    uncompleteTodo,\n    addedTodo,\n    editedTodo\n}\n\nexport default actions;","import actions from \"./actions\";\n\nconst {\n    getTodos,\n    removeTodo,\n    addedTodo,\n    completeTodo,\n    uncompleteTodo,\n    editedTodo\n} = actions;\n\nconst getData = () => (dispatch) => {\n    const dataFromLS = JSON.parse(localStorage.getItem('todos'))\n    if (!dataFromLS) {\n        fetch('https://jsonplaceholder.typicode.com/users/1/todos/?_limit=10')\n            .then(res => res.json())\n            .then(data => dispatch(getTodos(data)))\n            .then(data => localStorage.setItem('todos', JSON.stringify(data.payload))\n            )\n    } else {\n        dispatch(getTodos(dataFromLS))\n    }\n}\n\nconst removeTodoItem = (idToRemove) => (dispatch, getState) => {\n    const todos = getState().todos\n    const updatedList = todos.filter(item => item.id !== idToRemove)\n    localStorage.setItem('todos', JSON.stringify(updatedList))\n    dispatch(removeTodo(updatedList))\n}\n\nconst completeTodoItem = (id) => (dispatch, getState) => {\n    const todos = getState().todos;\n    const updatedTodoList = todos.map(item =>\n        item.id === id\n            ? {...item, completed: true}\n            : item\n    )\n    localStorage.setItem('todos', JSON.stringify(updatedTodoList))\n    dispatch(completeTodo(updatedTodoList))\n}\nconst uncompleteTodoItem = (id) => (dispatch, getState) => {\n    const todos = getState().todos;\n    const updatedTodoList = todos.map(item =>\n        item.id === id\n            ? {...item, completed: false}\n            : item\n    )\n    localStorage.setItem('todos', JSON.stringify(updatedTodoList))\n    dispatch(uncompleteTodo(updatedTodoList))\n}\n\nconst addTodo = (newTodo) => (dispatch,getState) => {\n    const todos = getState().todos;\n    const updatedTodoList = [...todos, newTodo]\n    localStorage.setItem('todos', JSON.stringify(updatedTodoList))\n    dispatch(addedTodo(updatedTodoList))\n}\n\nconst editedTodoItem = (id,newTitle) => (dispatch, getState) => {\n    const todos = getState().todos;\n    const updatedTodoList = todos.map(item =>\n        item.id === id\n            ? {...item, title: newTitle}\n            : item\n    )\n    localStorage.setItem('todos', JSON.stringify(updatedTodoList))\n    dispatch(editedTodo(updatedTodoList))\n}\n\nconst operations = {\n    getData,\n    removeTodoItem,\n    completeTodo: completeTodoItem,\n    uncompleteTodo: uncompleteTodoItem,\n    addTodo,\n    editedTodoItem\n}\n\nexport default operations;","const todos = state => state.todos;\n\nexport default {\n    todos: todos\n}\n\n","import reducers from \"./reducers\";\nexport {default as todosTypes} from './types'\nexport {default as todosActions} from './actions'\nexport {default as todosOperations} from './operations'\nexport {default as todosSelectors} from './selectors'\n\nexport default reducers\n\n","export function generateStyles() {\n    return {\n        modal: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            background: 'white',\n            width: '70%',\n            border: '2px solid #006bb3',\n            boxShadow: 24,\n            padding: '40px',\n            borderRadius: \"10px\",\n\n            ['@media(min-width: 768px)']: {\n                width: 400,\n            }\n        },\n        icon: {\n            color: \"#00ccff\",\n            paddingLeft: '5px'\n        },\n        textField: {\n            width: \"300px\",\n        },\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n\n            ['@media(min-width: 768px)']: {\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-between',\n            }\n        }\n    }\n}","import React, {useState} from 'react';\nimport {Box, Button, Modal, TextField, Tooltip, Typography} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport {useDispatch} from \"react-redux\";\nimport {todosOperations} from \"../../../redux/features/todos\";\nimport PropTypes from 'prop-types'\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\n\nModalWindow.propTypes ={\n    title: PropTypes.string,\n    id: PropTypes.string\n}\n\nfunction ModalWindow({title,id}) {\n    const useStyles = makeStyles(generateStyles);\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const [updatedTodo,setUpdatedTodo] = useState()\n    const [isButtonDisabled, setButtonDisabled] = useState(true);\n\n    const handleUpdate = () => {\n        dispatch(todosOperations.editedTodoItem(id,updatedTodo))\n    }\n    const handleEnter = (event) => {\n        event.target.value.length >= 5 ? setButtonDisabled(false) : setButtonDisabled(true)\n        setUpdatedTodo(event.target.value)\n    }\n\n    return (\n        <Box>\n            <Tooltip title=\"Click to edit\">\n                <EditIcon className={classes.icon} onClick={handleOpen}/>\n            </Tooltip>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box className={classes.modal}>\n                    <Box className={classes.container}>\n                        <TextField\n                            type=\"input\"\n                            className={classes.textField}\n                            defaultValue={title}\n                            multiline={true}\n                            variant=\"outlined\"\n                            onChange={handleEnter}\n                        />\n                        <Button\n                            className={classes.button}\n                            variant=\"outlined\"\n                            disabled={isButtonDisabled}\n                            onClick={handleUpdate}\n                        >\n                            Submit\n                        </Button>\n                    </Box>\n                </Box>\n            </Modal>\n        </Box>\n    );\n}\n\nexport default ModalWindow;","import React from 'react';\nimport {Card, CardActions, CardContent, Tooltip, Typography} from \"@mui/material\";\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\nimport cx from 'classnames';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {useDispatch} from \"react-redux\";\nimport {todosOperations} from \"../../../../redux/features/todos\";\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded';\nimport CancelRoundedIcon from '@mui/icons-material/CancelRounded';\nimport ModalWindow from \"../../../Components/Modal/ModalWindow\";\n\nimport PropTypes from 'prop-types'\n\nTodoItem.propTypes ={\n    card: PropTypes.object.isRequired,\n}\n\nfunction TodoItem({card}) {\n    const {title, completed, id} = card;\n    const useStyles = makeStyles(generateStyles);\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    let listItemCx = cx(classes.card, {[classes.completedCard]: completed === true});\n\n    const removeTodo = () => {\n        dispatch(todosOperations.removeTodoItem(id))\n    }\n    const completeTodo = () => {\n        dispatch(todosOperations.completeTodo(id))\n    }\n    const uncompleteTodo = () => {\n        dispatch(todosOperations.uncompleteTodo(id))\n    }\n\n    let isCompleted;\n    completed\n        ?\n        isCompleted = <Tooltip title=\"Mark as uncompleted\">\n            <CheckCircleRoundedIcon\n                onClick={uncompleteTodo}\n                style={{color: \"green\"}}\n                className={classes.icon}\n            />\n        </Tooltip>\n        :\n        isCompleted = <Tooltip title=\"Mark as completed\">\n            <CancelRoundedIcon\n                onClick={completeTodo}\n                style={{color: \"red\"}}\n                className={classes.icon}\n            />\n        </Tooltip>\n\n    return (\n        <Card className={classes.card}\n              style={completed ? {background: \"#ebfaeb\"} : {background: \"#ffebe6\"}}>\n            <CardContent>\n                <Typography\n                    variant=\"h5\"\n                    component=\"div\"\n                    color=\"#006bb3\"\n                    className={listItemCx}\n                >\n                    {title}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                {isCompleted}\n                <Tooltip title=\"Double click to delete\">\n                    <DeleteIcon\n                        style={{color: \"#800033\"}}\n                        className={classes.icon}\n                        onDoubleClick={removeTodo}\n                    />\n                </Tooltip>\n                <ModalWindow title={title} id={id}/>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default TodoItem;","\nexport function generateStyles(){\n    return{\n        todos: {\n            marginTop: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center',\n            ['@media (min-width: 768px)' ]:{\n                marginLeft: '250px',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                alignItems: 'unset',\n\n            }\n        }\n    }\n}","import React from 'react';\nimport {Box} from \"@mui/material\";\nimport TodoItem from \"../TodoItem/TodoItem\";\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\nimport nextId from \"react-id-generator\";\nimport {useSelector} from \"react-redux\";\nimport {todosSelectors} from \"../../../../redux/features/todos\";\n\nfunction Todos() {\n    const useStyles = makeStyles(generateStyles);\n    const classes = useStyles();\n    const todos = useSelector(todosSelectors.todos)\n\n    return (\n        <>\n            <Box className={classes.todos}>\n                {todos.map(todo => {\n                    return(\n                        <TodoItem\n                            key={nextId()}\n                            card={todo}/>\n                    )\n                })}\n            </Box>\n        </>\n    );\n}\n\nexport default Todos;","export function generateStyles() {\n    return {\n        wrapper: {\n            display: 'flex',\n            justifyContent: 'center',\n\n            ['@media (min-width: 768px)']: {\n                display: 'block',\n                marginLeft: \"300px\",\n                marginTop: '20px'\n            }\n        },\n        textField: {\n            width: \"300px\"\n        }\n    }\n}","import React, {useState} from 'react';\nimport {Box, Button, IconButton, Snackbar, TextField, Typography} from \"@mui/material\";\nimport nextId from \"react-id-generator\";\nimport {useDispatch} from \"react-redux\";\nimport {todosOperations} from \"../../../redux/features/todos\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport {makeStyles} from \"@mui/styles\";\nimport {generateStyles} from \"./generateStyles\";\n\nfunction CreateNew() {\n\n    const useStyles = makeStyles(generateStyles);\n    const classes = useStyles();\n    const [todo,setTodo] = useState();\n    const [open, setOpen] = React.useState(false);\n    const [isButtonDisabled, setButtonDisabled] = useState(true);\n\n    const handleClick = () => {\n        setOpen(true);\n        setTimeout(() => {setOpen(false)},1500)\n    };\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setOpen(false);\n    };\n\n    const action = (\n        <React.Fragment>\n            <IconButton\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleClose}\n            >\n                <CloseIcon fontSize=\"small\" />\n            </IconButton>\n        </React.Fragment>\n    );\n\n    const dispatch = useDispatch();\n\n    const enterTodo = (event) => {\n        setTodo(event.target.value)\n        event.target.value.length >= 5 ? setButtonDisabled(false) : setButtonDisabled(true)\n    }\n    const addTodo = () => {\n        const newTodo = {\n            id: nextId(),\n            title: todo,\n            completed: false\n        }\n        dispatch(todosOperations.addTodo(newTodo))\n        setTodo('')\n        handleClick()\n    }\n\n    return (\n        <Box className={classes.wrapper}>\n            <Box className={classes.container}>\n                <Typography variant=\"h4\" gutterBottom component=\"div\">\n                    Create New Todo\n                </Typography>\n                <Box>\n                    <TextField type=\"input\"\n                               className={classes.textField}\n                               value={todo} multiline={true}\n                               onChange={enterTodo}\n                               label=\"New todo\"\n                               variant=\"outlined\" />\n                </Box>\n                <Button style={{marginTop: \"20px\"}}\n                        disabled={isButtonDisabled}\n                        variant=\"outlined\"\n                        onClick={addTodo}\n                >\n                    Submit\n                </Button>\n                <Snackbar\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                    message=\"Todo added\"\n                    action={action}\n                />\n            </Box>\n        </Box>\n    );\n}\n\nexport default CreateNew;","import './App.css';\nimport Navigation from \"./view/Components/Nav/Navigation\";\nimport React, {useEffect, useState} from \"react\";\nimport Header from \"./view/Components/Header/Header\";\nimport useWindowSize from \"./view/hooks/useWindowSize\";\nimport breakpoints from \"./view/utils/breakpoints\";\nimport Todos from \"./view/Pages/TodosPage/Todos/Todos\";\nimport {Route, Switch} from \"react-router-dom\";\nimport CreateNew from \"./view/Pages/CreateNew/CreateNew\";\nimport {todosOperations} from \"./redux/features/todos\";\nimport {useDispatch} from \"react-redux\";\n\nfunction App() {\n    const sizes = useWindowSize();\n    const {width} = sizes;\n    const {desktop} = breakpoints;\n    const dispatch = useDispatch();\n    const [isDesktop, setIsDesktop] = useState(width >= desktop);\n\n    useEffect(() => {\n        width >= desktop ? setIsDesktop(true) : setIsDesktop(false)\n    }, [width])\n\n    useEffect(() => {\n        dispatch(todosOperations.getData())\n    },[])\n\n    return (\n        <div className=\"App\">\n\n            {isDesktop\n                ?\n                <Navigation/>\n                :\n                <Header/>\n            }\n            <Switch>\n                <Route exact path=\"/\" render={() => <Todos/>}/>\n                <Route path=\"/create-new-todo\" render={() => <CreateNew/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\"\n\nimport todosReducers from '../features/todos'\n\nconst rootReducer = combineReducers({\n    ...todosReducers,\n})\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store/store\";\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <Provider store={store}>\n              <App />\n          </Provider>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}